{"version":3,"sources":["img/orange_yellow_background_202072.jpg","navigation.js","portfolio.js","Footer.js","Header.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","navLinks","map","section","href","className","this","props","LogoTitle","Component","Portfolio","Icon","iconObj","icon","title","description","Link","link","name","Icons","Footer","myStyles","Background","backgroundSize","Header","style","button","Boolean","window","location","hostname","match","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,6D,mOC+B5BC,G,mLAxBT,IACMC,EADW,CAAC,OAAQ,WAAY,WACZC,KAAI,SAAAC,GAC5B,OACI,4BAAI,uBAAGC,KAAM,IAAMD,GAAUA,OAKrC,OACI,6BAEF,wBAAIE,UAAU,QAASC,KAAKC,MAAMC,UAAlC,KACA,4BACCP,Q,GAfkBQ,cCFnBC,G,6KAEE,OACI,yBAAKL,UAAU,aACX,wCACA,0EACA,yBAAKA,UAAU,OACX,kBAAC,EAAD,CAAOM,KAAMC,EAAQ,GAAGC,KAAMC,MAAOF,EAAQ,GAAGE,MAAOC,YAAaH,EAAQ,GAAGG,YAAaC,KAAMJ,EAAQ,GAAGK,OAC7G,kBAAC,EAAD,CAAON,KAAMC,EAAQ,GAAGC,KAAMC,MAAOF,EAAQ,GAAGE,MAAOC,YAAaH,EAAQ,GAAGG,YAAaC,KAAMJ,EAAQ,GAAGK,OAC7G,kBAAC,EAAD,CAAON,KAAMC,EAAQ,GAAGC,KAAMC,MAAOF,EAAQ,GAAGE,MAAOC,YAAaH,EAAQ,GAAGG,YAAaC,KAAMJ,EAAQ,GAAGK,OAC7G,kBAAC,EAAD,CAAON,KAAMC,EAAQ,GAAGC,KAAMC,MAAOF,EAAQ,GAAGE,MAAOC,YAAaH,EAAQ,GAAGG,YAAaC,KAAMJ,EAAQ,GAAGK,a,GAVzGR,cAqBlBG,EAAU,CACZ,CACIC,KAAM,8BAAUK,KAAK,aACrBJ,MAAO,uBAAGV,KAAK,cAAR,eACPW,YAAa,2EACbE,KAAM,kDAEV,CACIJ,KAAM,8BAAUK,KAAK,YACrBJ,MAAO,uBAAGV,KAAK,cAAR,mBACPW,YAAa,kEACbE,KAAM,4CAGV,CACIJ,KAAM,8BAAUK,KAAK,iBACrBJ,MAAO,uBAAGV,KAAK,cAAR,cACPW,YAAa,4DACbE,KAAM,sDAGV,CACIJ,KAAM,8BAAUK,KAAK,SACrBJ,MAAO,uBAAGV,KAAK,cAAR,aACPW,YAAa,oDACbE,KAAM,6CAKRE,E,uKAEE,OACI,6BACI,8BAAOb,KAAKC,MAAMI,MAClB,4BAAKL,KAAKC,MAAMO,OAChB,2BAAIR,KAAKC,MAAMQ,aACf,2BAAIT,KAAKC,MAAMS,W,GAPXP,aAaLC,ICtCAU,G,6KAxBT,IACMnB,EADW,CAAC,8BAAUiB,KAAK,kBAA6B,8BAAUA,KAAK,iBAA4B,8BAAUA,KAAK,oBAC9FhB,KAAI,SAAAC,GAC5B,OACI,4BAAI,uBAAGC,KAAM,IAAMD,GAAUA,OAKrC,OACI,gCAEF,wBAAIE,UAAU,QAASC,KAAKC,MAAMC,UAAlC,KACA,4BACCP,Q,GAfcQ,c,eCCfY,EAAW,CACb,gBAAkB,OAAlB,O,OAA0BC,EAA1B,KACA,OAAU,OACVC,eAAgB,SAqBLC,E,uKAfP,OACI,4BAAQC,MAAOJ,GACX,4BAAKf,KAAKC,MAAMO,OAChB,gDACR,uBAAGV,KAAK,WAAWE,KAAKC,MAAMmB,a,GANjBjB,aCCDkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICRAC,E,uKAEF,OACE,6BACA,kBAAC,EAAD,CAAYxB,UAAU,oBACtB,kBAAC,EAAD,CAAQM,MAAM,yBAAyBY,OAAO,kBAE9C,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQlB,UAAU,0D,GARNC,aAelBwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.08610fb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/orange_yellow_background_202072.7f8e4ae2.jpg\";","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Link} from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\nimport './navigation.css';\n\nclass Navigation extends Component {\n  render() {\n      const sections = ['Home', 'Projects', 'Contact'];\n      const navLinks = sections.map(section => {\n        return(\n            <li><a href={'#' + section}>{section}</a></li>\n            \n        )\n      });\n\n    return (\n        <nav>\n          \n      <h2 className=\"logo\" >{this.props.LogoTitle} </h2>\n      <ul>\n      {navLinks}      \n\n      \n      \n      </ul>\n      \n      </nav>\n    );\n  }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport './portfolio.css'\n\nclass Portfolio extends Component {\n    render() {\n        return (\n            <div className=\"portfolio\">\n                <h3>Projects</h3>\n                <h2>Here are some of my recent react projects!</h2>\n                <div className=\"row\">\n                    <Icons Icon={iconObj[0].icon} title={iconObj[0].title} description={iconObj[0].description} Link={iconObj[0].link}/>\n                    <Icons Icon={iconObj[1].icon} title={iconObj[1].title} description={iconObj[1].description} Link={iconObj[1].link}/>\n                    <Icons Icon={iconObj[2].icon} title={iconObj[2].title} description={iconObj[2].description} Link={iconObj[2].link}/>\n                    <Icons Icon={iconObj[3].icon} title={iconObj[3].title} description={iconObj[3].description} Link={iconObj[3].link}/>\n\n                </div>\n            </div>\n        );\n\n    }\n\n\n};\n\nconst iconObj = [\n    {\n        icon: <ion-icon name=\"videocam\"></ion-icon>,\n        title: <a href=\"google.com\">BingeWorthy</a>,\n        description: 'Bingeworthy is an app that provides you a list of highly rated TV shows ',\n        link: 'https://production-binge-worthy.herokuapp.com/'\n    },\n    {\n        icon: <ion-icon name=\"bicycle\"></ion-icon>,\n        title: <a href=\"google.com\">Workout Tracker</a>,\n        description: 'Here is a workout tracker that lets you add and remove exercies',\n        link: 'https://damp-waters-96726.herokuapp.com/'\n\n    },\n    {\n        icon: <ion-icon name=\"logo-octocat\"></ion-icon>,\n        title: <a href=\"google.com\">Cat Finder</a>,\n        description: 'Check out our big cat finder. Find big cats in your area!',\n        link: 'https://github.com/robertrcandler/BootCampProject1'\n\n    },\n    {\n        icon: <ion-icon name=\"book\"></ion-icon>,\n        title: <a href=\"google.com\">Quiz Game</a>,\n        description: 'Test your knowledge with this quiz game I created',\n        link: 'https://jdstroup10.github.io/Homework-4/'\n\n    }\n];\n\nclass Icons extends Component {\n    render() {\n        return (\n            <div>\n                <span>{this.props.Icon}</span>\n                <h4>{this.props.title}</h4>\n                <p>{this.props.description}</p>\n                <p>{this.props.Link}</p>\n            </div>\n        );\n    }\n}\n\nexport default Portfolio;\n","import React, {Component} from 'react';\nimport './Footer.css';\n\nclass Footer extends Component {\n  render() {\n      const sections = [<ion-icon name=\"logo-facebook\"></ion-icon>, <ion-icon name=\"logo-twitter\"></ion-icon>, <ion-icon name=\"logo-instagram\"></ion-icon>];\n      const navLinks = sections.map(section => {\n        return(\n            <li><a href={'#' + section}>{section}</a></li>\n            \n        )\n      });\n\n    return (\n        <footer>\n          \n      <h2 className=\"logo\" >{this.props.LogoTitle} </h2>\n      <ul>\n      {navLinks}      \n\n      \n      \n      </ul>\n      \n      </footer>\n    );\n  }\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport './Header.css'\nimport Background from './img/orange_yellow_background_202072.jpg';\n\nconst myStyles = {\n    'backgroundImage': `url(${Background})`,\n    'height': '50vh',\n    backgroundSize: 'cover'\n}\n\n\nclass Header extends Component {\n    render(){\n        return (\n            <header style={myStyles}>\n                <h1>{this.props.title}</h1>\n                <p>Jason Strouphauer</p>\n        <a href=\"#button\">{this.props.button}</a>\n            </header>\n\n        );\n\n    }\n\n\n};\n\n\nexport default Header;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport Navigation from './navigation';\nimport Portfolio from './portfolio';\nimport Footer from './Footer'\nimport Header from './Header'\nimport * as serviceWorker from './serviceWorker';\n\nclass App extends Component {\n  render() {\n    return(\n      <div>\n      <Navigation LogoTitle=\"React Portfolio\" />\n      <Header title=\"UT Boot Camp Portfolio\" button=\"Find Out More\">\n      </Header>\n      <Portfolio></Portfolio>\n      <Footer LogoTitle=\"Contact me: jdstroup10@gmail.com || 512-925-9287\" />\n\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}